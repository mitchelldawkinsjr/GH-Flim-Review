#!/usr/bin/env python3
import argparse
from pathlib import Path
import glob
import html
import re


def main():
    ap = argparse.ArgumentParser(description='Generate a landing index at out/index.html')
    ap.add_argument('--out_root', default='out', help='Root output directory (default: out)')
    args = ap.parse_args()

    out_root = Path(args.out_root)
    out_root.mkdir(parents=True, exist_ok=True)

    # Season dashboard
    season_index = out_root / 'Season' / 'dashboards' / 'index.html'

    # Weeks discovered
    week_dirs = sorted([p for p in out_root.glob('Wk*') if p.is_dir()])

    def rel(p: Path) -> str:
        try:
            return str(p.relative_to(out_root))
        except Exception:
            return str(p)

    weeks_rows = []
    for wd in week_dirs:
        week_name = wd.name
        dashboards = wd / 'dashboards' / 'index.html'
        pdfs_dir = wd / 'pdfs'
        summary_pdf = pdfs_dir / 'summary.pdf'
        group_pdf = pdfs_dir / 'group_film_study.pdf'
        # Find weekly results/summary CSVs
        csvs = sorted(glob.glob(str(wd / 'results_*.csv')))
        # Derive opponent from results or prepared filenames
        opponent = ''
        if csvs:
            stem = Path(csvs[0]).stem  # e.g., results_Wk8_Kville
            m = re.search(r'results_Wk\d+_(.+)$', stem)
            if m:
                opponent = m.group(1)
        if not opponent:
            prep_files = sorted(glob.glob(str(wd / 'Wk*_*_prepared.csv')))
            if prep_files:
                stem = Path(prep_files[0]).stem  # e.g., Wk8_Kville_prepared
                m = re.search(r'Wk\d+_(.+)_prepared$', stem)
                if m:
                    opponent = m.group(1)
        csv_links = ' '.join(f"<a href=\"{html.escape(rel(Path(c)))}\">{html.escape(Path(c).name)}</a>" for c in csvs)
        weeks_rows.append(
            f"<tr><td>{html.escape(week_name)}</td><td>{html.escape(opponent) if opponent else '-'}</td>"
            f"<td><a href=\"{html.escape(rel(dashboards))}\">Dashboards</a></td>"
            f"<td><a href=\"{html.escape(rel(summary_pdf))}\">Summary PDF</a></td>"
            f"<td><a href=\"{html.escape(rel(group_pdf))}\">Group Film PDF</a></td>"
            f"<td>{csv_links}</td>"
            f"</tr>"
        )

    html_str = f"""
<!doctype html>
<html>
<head>
  <meta charset=\"utf-8\" />
  <title>Film Review Hub</title>
  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />
  <style>
    body {{ font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif; margin: 20px; }}
    h1 {{ margin-bottom: 10px; }}
    .section {{ margin-top: 24px; }}
    table {{ border-collapse: collapse; width: 100%; }}
    th, td {{ border: 1px solid #ccc; padding: 6px 8px; text-align: left; }}
    th {{ background: #f5f5f5; }}
    .cards {{ display: grid; grid-template-columns: repeat(auto-fit, minmax(240px, 1fr)); gap: 14px; }}
    .card {{ border: 1px solid #ddd; border-radius: 8px; padding: 12px; }}
    .muted {{ color: #666; font-size: 12px; }}
  </style>
</head>
<body>
  <h1>Film Review Hub</h1>

  <div class=\"cards\">
    <div class=\"card\">
      <div><b>Season Dashboards</b></div>
      <div class=\"muted\">Totals & rates per player</div>
      <div style=\"margin-top:8px\"><a href=\"{html.escape(rel(season_index))}\">Open</a></div>
    </div>
  </div>

  <div class=\"section\">
    <h2>Weeks</h2>
    <table>
      <tr><th>Week</th><th>Opponent</th><th>Weekly Dashboards</th><th>Summary</th><th>Group Film</th><th>CSVs</th></tr>
      {''.join(weeks_rows)}
    </table>
  </div>

  <p class=\"muted\">Generated by make_site_index.py</p>
</body>
</html>
"""

    (out_root / 'index.html').write_text(html_str, encoding='utf-8')
    print(f"Wrote landing index to {out_root/'index.html'}")


if __name__ == '__main__':
    main()


